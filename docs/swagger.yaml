definitions:
  AuthResponse:
    description: auth response
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  ErrorResponse:
    description: ErrorResponse DTO model
    properties:
      error:
        example: error message
        type: string
    type: object
  LoginRequest:
    description: login request
    properties:
      email:
        example: abc@xyz.com
        format: email
        type: string
      password:
        example: password
        type: string
    required:
    - email
    - password
    type: object
  PatchUser:
    description: PatchUser DTO model for user updates (partial)
    properties:
      email:
        example: abc@xyz.com
        format: email
        type: string
      first_name:
        example: John
        type: string
      is_admin:
        example: false
        type: boolean
      last_name:
        example: Doe
        type: string
      password:
        example: password
        type: string
      phone:
        example: "+49123456789"
        format: phone
        type: string
    type: object
  RegisterUser:
    description: RegisterUser DTO model for user registration
    properties:
      email:
        example: abc@xyz.com
        format: email
        type: string
      first_name:
        example: John
        type: string
      last_name:
        example: Doe
        type: string
      password:
        example: password
        type: string
      phone:
        example: "+49123456789"
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    type: object
  SaveUser:
    description: SaveUser DTO model for user creation and updates (overwrites)
    properties:
      email:
        example: abc@xyz.com
        format: email
        type: string
      first_name:
        example: John
        type: string
      is_admin:
        example: false
        type: boolean
      last_name:
        example: Doe
        type: string
      password:
        example: password
        type: string
      phone:
        example: "+49123456789"
        format: phone
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - phone
    type: object
  User:
    description: User DTO model for responses
    properties:
      email:
        example: abc@xyz.com
        format: email
        type: string
      first_name:
        example: John
        type: string
      id:
        example: b05a5d28-1a51-46a8-b35c-6e160a05a0ad
        format: uuid
        type: string
      last_name:
        example: Doe
        type: string
      phone:
        example: "+49123456789"
        format: phone
        type: string
      version_id:
        example: b05a5d28-1a51-46a8-b35c-6e160a05a0ad
        format: uuid
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Query users
      parameters:
      - example: abc@xyz.com
        format: email
        in: query
        name: email
        type: string
      - example: John
        in: query
        name: first_name
        type: string
      - example: b05a5d28-1a51-46a8-b35c-6e160a05a0ad
        format: uuid
        in: query
        name: id
        type: string
      - example: Doe
        in: query
        name: last_name
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 0
        in: query
        name: offset
        type: integer
      - example: "+49123456789"
        format: phone
        in: query
        name: phone
        type: string
      - example: b05a5d28-1a51-46a8-b35c-6e160a05a0ad
        format: uuid
        in: query
        name: version_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/User'
              type: array
            type: array
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Query users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/SaveUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Create a user
      tags:
      - user
  /api/v1/users/{id}:
    delete:
      description: Delete a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Delete a user
      tags:
      - user
    get:
      description: Get a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Get a user
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Patch a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/PatchUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Patch a user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/SaveUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Update a user
      tags:
      - user
  /api/v1/users/me:
    delete:
      description: Delete me as a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Delete me (user)
      tags:
      - user
    get:
      description: Get me as a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Get me (user)
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Patch me as a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/PatchUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Patch me (user)
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update me as a user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/SaveUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Forbidden Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
      - Bearer: []
      summary: Update me (user)
      tags:
      - user
  /auth/login:
    post:
      description: user login
      parameters:
      - description: Login Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Login
      tags:
      - auth
  /auth/refresh:
    post:
      description: refresh token
      parameters:
      - description: Refresh Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Refresh
      tags:
      - auth
  /auth/register:
    post:
      description: user registration
      parameters:
      - description: Register User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorResponse'
      summary: Register
      tags:
      - auth
swagger: "2.0"
